name: 'Automatic snapshots'

on:
  push:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            flag: win-x64
          - os: ubuntu-latest
            flag: linux-x64
          - os: macos-latest
            flag: osx-x64

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.100'
    
    - run: |
        dotnet publish -r ${{ matrix.flag }} -c release -o ./publish-output -p:Version=$(cat ./VERSION/VERSION)
        mv ./publish-output/CLI ./publish-output/amcli-${{ matrix.flag }}
        mv ./publish-output/CLI.exe ./publish-output/amcli-${{ matrix.flag }}

    - if: ${{ matrix.os == 'windows-latest' }}
      run: |
        mv ./publish-output/amcli-win-x64 ./publish-output/amcli-win-x64.exe

    - uses: actions/upload-artifact@v3
      if: ${{ matrix.os == 'windows-latest' }}
      with:
        name: amcli-win-x64
        path: ./publish-output/amcli-${{ matrix.flag }}.exe

    - uses: actions/upload-artifact@v3
      if: ${{ matrix.os != 'windows-latest' }}
      with:
        name: amcli-${{ matrix.flag }}
        path: ./publish-output/amcli-${{ matrix.flag }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@v3
      with:
        name: amcli-win-x64
    - uses: actions/download-artifact@v3
      with:
        name: amcli-linux-x64
    - uses: actions/download-artifact@v3
      with:
        name: amcli-osx-x64

    - run: |
        version=$(cat ./VERSION/VERSION)
        echo ${{ secrets.CLI_ACCESS_TOKEN }} > token.txt
        gh auth login --with-token < token.txt
        gh release create v$version \
        ./publish-output/amcli-win-x64.exe \
        ./publish-output/amcli-linux-x64 \
        ./publish-output/amcli-osx-x64 \
        -R asc-community/AngouriMathCLI \
        -t 'AngouriMath CLI' \
        -n 'Expant assets and find the binary for you'
